<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FilteredComboBox"
        xmlns:ig="http://schemas.infragistics.com/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives" x:Name="MyInstance" x:Class="FilteredComboBox.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        DataContext="{Binding ElementName=MyInstance}">
    <Window.Resources>
        <Style TargetType="{x:Type ig:XamComboEditor}">
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="MinHeight" Value="22"/>
            <Setter Property="MinDropDownHeight" Value="20"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="InputMethod.IsInputMethodEnabled" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ig:XamComboEditor}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0.55"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ModeStates">
                                    <VisualState x:Name="Selectable"/>
                                    <VisualState x:Name="Editable"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="WaterMarkStates">
                                    <VisualState x:Name="WaterMarkHidden"/>
                                    <VisualState x:Name="WaterMarkVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="WaterMark">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DropDownStates">
                                    <VisualState x:Name="Closed"/>
                                    <VisualState x:Name="Open">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="Popup">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Boolean>True</System:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.001">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Boolean>True</System:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PositionStates">
                                    <VisualState x:Name="Below"/>
                                    <VisualState x:Name="Above">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Position" Storyboard.TargetName="Resizer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <igPrim:ResizerPosition>Above</igPrim:ResizerPosition>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="Resizer">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <System:Int32>0</System:Int32>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ContentPresenterBorder">
                                <Grid x:Name="gridLayout" ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="Popup" IsOpen="False" VerticalAlignment="Bottom">
                                        <Grid Background="{TemplateBinding BorderBrush}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="RootPopupElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto" MaxWidth="{TemplateBinding MaxDropDownWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinHeight="{TemplateBinding MinDropDownHeight}" Grid.Row="1" VerticalAlignment="Top">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="White" Offset="0"/>
                                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <igPrim:ItemsPanel x:Name="ItemsPanel" Stylus.IsPressAndHoldEnabled="False" VerticalAlignment="Top">
                                                        <igPrim:ItemsPanel.Clip>
                                                            <RectangleGeometry/>
                                                        </igPrim:ItemsPanel.Clip>
                                                    </igPrim:ItemsPanel>
                                                    <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" Grid.Row="0" Width="20"/>
                                                    <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="20" Grid.Row="1"/>
                                                </Grid>
                                            </Border>
                                            <igPrim:PopupResizer x:Name="Resizer" Grid.ColumnSpan="2" IsTabStop="False" Popup="{Binding ElementName=Popup}" Grid.Row="2" ResizeElement="{Binding ElementName=RootPopupElement}">
                                                <igPrim:PopupResizer.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </igPrim:PopupResizer.RenderTransform>
                                                <igPrim:PopupResizer.Visibility>
                                                    <Binding Path="AllowDropDownResizing" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <igPrim:ValueConverterGroup>
                                                                <igPrim:FixedValueConverter>
                                                                    <igPrim:FixedValueConverter.DestinationValue>
                                                                        <Visibility>Visible</Visibility>
                                                                    </igPrim:FixedValueConverter.DestinationValue>
                                                                    <igPrim:FixedValueConverter.SourceValue>
                                                                        <System:Boolean>True</System:Boolean>
                                                                    </igPrim:FixedValueConverter.SourceValue>
                                                                </igPrim:FixedValueConverter>
                                                                <igPrim:FixedValueConverter>
                                                                    <igPrim:FixedValueConverter.DestinationValue>
                                                                        <Visibility>Collapsed</Visibility>
                                                                    </igPrim:FixedValueConverter.DestinationValue>
                                                                    <igPrim:FixedValueConverter.SourceValue>
                                                                        <System:Object/>
                                                                    </igPrim:FixedValueConverter.SourceValue>
                                                                </igPrim:FixedValueConverter>
                                                            </igPrim:ValueConverterGroup>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </igPrim:PopupResizer.Visibility>
                                            </igPrim:PopupResizer>
                                        </Grid>
                                    </Popup>
                                    <Border x:Name="borderEditMode" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding EditAreaBackground}" Grid.ColumnSpan="2" CornerRadius="2" Visibility="Collapsed"/>
                                    <ToggleButton x:Name="ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Foreground" Value="#FF333333"/>
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                                            <GradientStop Color="#FF617584" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Padding" Value="2"/>
                                                <Setter Property="Cursor" Value="Hand"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay2">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#E5FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#BCFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="CheckStates">
                                                                        <VisualState x:Name="Checked">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay3">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#E5FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#BCFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unchecked"/>
                                                                    </VisualStateGroup>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Grid>
                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2"/>
                                                                    <Border x:Name="BackgroundOverlay" BorderBrush="#FF448DCA" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF448DCA" CornerRadius="2" Opacity="0"/>
                                                                    <Border x:Name="BackgroundOverlay2" BorderBrush="#00000000" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF448DCA" CornerRadius="1" Opacity="0"/>
                                                                    <Border x:Name="BackgroundGradient" BorderBrush="White" BorderThickness="1" CornerRadius="1" Margin="{TemplateBinding BorderThickness}">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                    </Border>
                                                                    <Border x:Name="BackgroundOverlay3" BorderBrush="#00000000" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF448DCA" CornerRadius="1" Opacity="0"/>
                                                                    <Border x:Name="BackgroundGradient2" BorderBrush="White" BorderThickness="1" CornerRadius="0,1,1,0" Margin="{TemplateBinding BorderThickness}" Opacity="0">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
                                                                                <GradientStop Color="White" Offset="0"/>
                                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                    </Border>
                                                                    <Border x:Name="Highlight" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="1" CornerRadius="1" IsHitTestVisible="False" Margin="1" Visibility="Collapsed"/>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                        <Grid Margin="3,0" VerticalAlignment="Center">
                                            <Path x:Name="BtnArrowBackground" Data="M0,0C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0z" Fill="White" Height="4" Margin="0,2,0,0" Stretch="Fill" Width="7"/>
                                            <Path x:Name="BtnArrowForeground" Data="M0,0C0,0 7,0 7,0 7,0 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0z" Fill="#FF333333" Height="4" Stretch="Fill" Width="7"/>
                                        </Grid>
                                    </ToggleButton>
                                    <TextBlock x:Name="WaterMark" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" IsHitTestVisible="False" Margin="2,0,0,0" Opacity="0.65" Padding="{TemplateBinding Padding}" Text="{TemplateBinding EmptyText}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <igPrim:SpecializedTextBox x:Name="TextBoxPresenter" BorderThickness="0" Background="Transparent" Foreground="{TemplateBinding Foreground}" Focusable="True" HorizontalAlignment="Stretch" InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}" IsTabStop="{TemplateBinding IsTabStop}" InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" Padding="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <StackPanel x:Name="MultiSelectContentPanel" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                <Border.ToolTip>
                                    <ToolTip x:Name="validationTooltip" Placement="Right">
                                        <ToolTip.Template>
                                            <ControlTemplate>
                                                <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                                                    <Grid.RenderTransform>
                                                        <TranslateTransform X="-25"/>
                                                    </Grid.RenderTransform>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="OpenStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                                <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.2" GeneratedEasingFunction="{x:Null}" To="Open">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                                                            <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                                                            <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualTransition>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Closed">
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Open">
                                                                <Storyboard>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                                                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                                                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                                                    <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                                                    <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                                                    <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                                                    <Border Background="#FFDC000C" CornerRadius="2"/>
                                                    <Border CornerRadius="2">
                                                        <TextBlock Foreground="White" MaxWidth="250" Margin="8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="False"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </ToolTip.Template>
                                    </ToolTip>
                                </Border.ToolTip>
                                <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                    <Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                    <Path Data="M0,0L2,0 8,6 8,8" Fill="White" Margin="1,3,0,0"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEditableResolved" Value="True">
                                <Setter Property="Visibility" TargetName="TextBoxPresenter" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="MultiSelectContentPanel" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="borderEditMode" Value="Visible"/>
                                <Setter Property="Grid.Column" TargetName="ToggleButton" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <ig:XamComboEditor
            ItemsSource="{Binding Products}"
            DisplayMemberPath="Name"
            EmptyText="Choose Product ..."
            Height="30" Width="200"
            AllowDropDownResizing="True"
            MaxDropDownHeight="150"
            AutoComplete="False" AllowFiltering="True">
            <ig:XamComboEditor.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <TextBlock Text="("/>
                            <TextBlock Text="{Binding ProductNumber}"/>
                            <TextBlock Text=") "/>
                        </StackPanel>
                        <TextBlock Grid.Column="1" Text="{Binding Name}"/>
                    </Grid>
                </DataTemplate>
            </ig:XamComboEditor.ItemTemplate>
            <!-- カスタム フィルターを追加します -->
            <ig:XamComboEditor.ItemFilters>
                <!-- データ モデルの ProductName プロパティのフィルターを作成します -->
                <ig:ComboItemFilter FieldName="Name">
                    <ig:ComparisonCondition Operator="Contains" />
                </ig:ComboItemFilter>
                <!-- データ モデルの ProductNumber プロパティのフィルターを作成します -->
                <ig:ComboItemFilter FieldName="ProductNumber">
                    <ig:ComparisonCondition Operator="StartsWith"/>
                </ig:ComboItemFilter>
            </ig:XamComboEditor.ItemFilters>
        </ig:XamComboEditor>
    </Grid>
</Window>
